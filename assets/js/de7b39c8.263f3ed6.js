(self.webpackChunkdocs_datalbry_io=self.webpackChunkdocs_datalbry_io||[]).push([[2],{3905:function(t,e,n){"use strict";n.d(e,{Zo:function(){return d},kt:function(){return m}});var r=n(7294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},l=Object.keys(t);for(r=0;r<l.length;r++)n=l[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(r=0;r<l.length;r++)n=l[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var u=r.createContext({}),p=function(t){var e=r.useContext(u),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},d=function(t){var e=p(t.components);return r.createElement(u.Provider,{value:e},t.children)},s={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},c=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,l=t.originalType,u=t.parentName,d=i(t,["components","mdxType","originalType","parentName"]),c=p(n),m=a,g=c["".concat(u,".").concat(m)]||c[m]||s[m]||l;return n?r.createElement(g,o(o({ref:e},d),{},{components:n})):r.createElement(g,o({ref:e},d))}));function m(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var l=n.length,o=new Array(l);o[0]=c;var i={};for(var u in e)hasOwnProperty.call(e,u)&&(i[u]=e[u]);i.originalType=t,i.mdxType="string"==typeof t?t:a,o[1]=i;for(var p=2;p<l;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},9218:function(t,e,n){"use strict";n.r(e),n.d(e,{frontMatter:function(){return o},metadata:function(){return i},toc:function(){return u},default:function(){return d}});var r=n(2122),a=n(9756),l=(n(7294),n(3905)),o={},i={unversionedId:"integration/connector-sdk/QUICKSTART",id:"integration/connector-sdk/QUICKSTART",isDocsHomePage:!1,title:"Getting Started",description:"The Connector-SDK is primarily for DataLbry internal usage, nevertheless we are releasing the SDK with Open-Source licenses, so others can use it for their very own Connectors, or write new Connectors for the DataLbry Knowledge Cloud.",source:"@site/docs/integration/connector-sdk/QUICKSTART.mdx",sourceDirName:"integration/connector-sdk",slug:"/integration/connector-sdk/QUICKSTART",permalink:"/integration/connector-sdk/QUICKSTART",version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/integration/connector-sdk/OVERVIEW"}},u=[{value:"Quickstart",id:"quickstart",children:[]},{value:"Plugin",id:"plugin",children:[{value:"Configuration",id:"configuration",children:[]}]},{value:"Connector",id:"connector",children:[{value:"Properties",id:"properties",children:[]}]},{value:"Limitations",id:"limitations",children:[]}],p={toc:u};function d(t){var e=t.components,n=(0,a.Z)(t,["components"]);return(0,l.kt)("wrapper",(0,r.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"The Connector-SDK is primarily for DataLbry internal usage, nevertheless we are releasing the SDK with Open-Source licenses, so others can use it for their very own Connectors, or write new Connectors for the DataLbry Knowledge Cloud."),(0,l.kt)("h2",{id:"quickstart"},"Quickstart"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Add the plugin to your ",(0,l.kt)("inlineCode",{parentName:"li"},"build.gradle.kts"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},'plugins {\n    id("io.datalbry.connector.sdk") version "0.0.28"\n}\n')),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},"Add the following snippet to your ",(0,l.kt)("inlineCode",{parentName:"li"},"settings.gradle.kts"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},'pluginManagement {\n    repositories {\n        gradlePluginPortal()\n        mavenCentral()\n        google()\n    }\n    resolutionStrategy {\n        eachPlugin {\n            if (requested.id.id == "io.datalbry.connector.sdk") {\n                useModule("io.datalbry.connector:connector-sdk-plugin:0.0.28")\n            }\n        }\n    }\n}\n')),(0,l.kt)("h2",{id:"plugin"},"Plugin"),(0,l.kt)("p",null,"The Connector-SDK provides a convenience plugin for JVM based builds.\nWe developed the Connector-SDK Gradle Plugin to help developer easily bootstrap the setup process of the connector repository."),(0,l.kt)("h3",{id:"configuration"},"Configuration"),(0,l.kt)("p",null,"The Connector-SDK-Plugin is using a properties first approach for configuration.\nIt will search in the following locations for configurations (the first one will be used)"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Gradle Properties"),(0,l.kt)("li",{parentName:"ol"},"Extensions")),(0,l.kt)("h2",{id:"connector"},"Connector"),(0,l.kt)("h3",{id:"properties"},"Properties"),(0,l.kt)("p",null,"The Connector SDK requires various configurations to be set while installing."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Example"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"io.datalbry.connector.alxndria.datasource")),(0,l.kt)("td",{parentName:"tr",align:null},"Yes"),(0,l.kt)("td",{parentName:"tr",align:null},"a736c224-aa4d-457b-ae7f-2bb9b890d17d"),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"The Alxndria datasource to use for synchronization. There must always be a 1:1 relationship between Connector and Datasource.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"io.datalbry.connector.alxndria.uri")),(0,l.kt)("td",{parentName:"tr",align:null},"Yes"),(0,l.kt)("td",{parentName:"tr",align:null},"alxndria.datalbry.io"),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"The URI to the Alxndria instance.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"io.datalbry.connector.concurrency")),(0,l.kt)("td",{parentName:"tr",align:null},"No"),(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"The Concurrency level of the Connector. 2 will result into having two parallel worker per connector instance.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"spring.datasource.url")),(0,l.kt)("td",{parentName:"tr",align:null},"Yes"),(0,l.kt)("td",{parentName:"tr",align:null},"jdbc:postgresql://host:port/database"),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"The Postgres database to store the traversal information in")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"spring.datasource.username")),(0,l.kt)("td",{parentName:"tr",align:null},"Yes"),(0,l.kt)("td",{parentName:"tr",align:null},"admin"),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"The user to authenticate to the database with")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"spring.datasource.password")),(0,l.kt)("td",{parentName:"tr",align:null},"Yes"),(0,l.kt)("td",{parentName:"tr",align:null},"admin123"),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"The password to authenticate to the database with")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"spring.rabbitmq.host")),(0,l.kt)("td",{parentName:"tr",align:null},"Yes"),(0,l.kt)("td",{parentName:"tr",align:null},"168.24.24.0"),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"The host of the RabbitMQ broker")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"spring.rabbitmq.port")),(0,l.kt)("td",{parentName:"tr",align:null},"Yes"),(0,l.kt)("td",{parentName:"tr",align:null},"5672"),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"The port of the RabbitMQ broker")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"spring.rabbitmq.username")),(0,l.kt)("td",{parentName:"tr",align:null},"Yes"),(0,l.kt)("td",{parentName:"tr",align:null},"rabbit-user"),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"The user to authenticate with to the RabbitMQ broker with")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"spring.rabbitmq.password")),(0,l.kt)("td",{parentName:"tr",align:null},"Yes"),(0,l.kt)("td",{parentName:"tr",align:null},"secret"),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"The password to authenticate with to the RabbitMQ broker with")))),(0,l.kt)("h2",{id:"limitations"},"Limitations"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The Connector-SDK only supports ",(0,l.kt)("inlineCode",{parentName:"li"},"Kotlin"),", as we heavily rely on compiler plugins, which are not yet being developed for java")))}d.isMDXComponent=!0}}]);