(self.webpackChunkdocs_datalbry_io=self.webpackChunkdocs_datalbry_io||[]).push([[750],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return y}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),s=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=s(e.components);return o.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=s(n),y=r,h=u["".concat(l,".").concat(y)]||u[y]||d[y]||i;return n?o.createElement(h,a(a({ref:t},p),{},{components:n})):o.createElement(h,a({ref:t},p))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,a[1]=c;for(var s=2;s<i;s++)a[s]=n[s];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},949:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return a},metadata:function(){return c},toc:function(){return l},default:function(){return p}});var o=n(2122),r=n(9756),i=(n(7294),n(3905)),a={},c={unversionedId:"connectors/clockify/QUICKSTART",id:"connectors/clockify/QUICKSTART",isDocsHomePage:!1,title:"Quickstart",description:"In this quickstart you will setup DataLbry's Clockify Connector.",source:"@site/docs/connectors/clockify/QUICKSTART.mdx",sourceDirName:"connectors/clockify",slug:"/connectors/clockify/QUICKSTART",permalink:"/connectors/clockify/QUICKSTART",version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/connectors/clockify/OVERVIEW"},next:{title:"Overview",permalink:"/connectors/github/OVERVIEW"}},l=[{value:"Dependencies",id:"dependencies",children:[]},{value:"Obtaining the code",id:"obtaining-the-code",children:[]},{value:"Obtaining Credentials",id:"obtaining-credentials",children:[]},{value:"Download the dependencies",id:"download-the-dependencies",children:[]},{value:"Testing",id:"testing",children:[]}],s={toc:l};function p(e){var t=e.components,n=(0,r.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,o.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"In this quickstart you will setup DataLbry's Clockify Connector."),(0,i.kt)("h2",{id:"dependencies"},"Dependencies"),(0,i.kt)("p",null,"You will need the following dependencies to run the code and develop:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.docker.com/"},"Docker")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.oracle.com/java/technologies/downloads/"},"Java 11")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://kotlinlang.org/"},"Kotlin")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://gradle.org/"},"Gradle")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://clockify.me/"},"Clockify User Account"))),(0,i.kt)("h2",{id:"obtaining-the-code"},"Obtaining the code"),(0,i.kt)("p",null,"You can obtain the code simply with Git. The Clockify connector is on GitHub. So you can go to your desired directory\nand execute the following command to download the code with git."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"$ git clone git@github.com:datalbry/clockify-connector.git\n")),(0,i.kt)("h2",{id:"obtaining-credentials"},"Obtaining Credentials"),(0,i.kt)("p",null,"To be able to use Clockify's API, you need to obtain the credentials and the base endpoint."),(0,i.kt)("p",null,"To obtain the API key, simply head to your user settings in the web frontend and scroll to the bottom of the page. The\nAPI Base Endpoint depends on your setup."),(0,i.kt)("p",null,"If you don't have a self hosted clockify instance, then your endpoint is ",(0,i.kt)("inlineCode",{parentName:"p"},"https:/api.clockify.me/api/v1"),".\nIf you have a self hosted clockify instance, then your endpoint is ",(0,i.kt)("inlineCode",{parentName:"p"},"https://yourcustomdomain.com/api"),".clockify\nFor more information please check out: ",(0,i.kt)("a",{parentName:"p",href:"https://clockify.me/developers-api"},"https://clockify.me/developers-api")),(0,i.kt)("p",null,"Now that you have obtained the credentials you need to add them to your gradle properties. We don't want to store them\nin the project properties because it can happen that they leak into the git repository making them effectively public.\nInstead, insert them into your gradle properties at ~/.gradle/gradle.properties"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"datalbry.clockify.apiKey = <yourApiKey>\ndatalbry.clockify.uri = <yourEndpoint>\n")),(0,i.kt)("h2",{id:"download-the-dependencies"},"Download the dependencies"),(0,i.kt)("p",null,"If you are using an IDE like IntelliJ IDEA then you probably don't need this part but if you are using the Gradle CLI\nthen you can download the dependencies with gradle ",(0,i.kt)("inlineCode",{parentName:"p"},"./gradlew build"),"."),(0,i.kt)("h2",{id:"testing"},"Testing"),(0,i.kt)("p",null,"The tests are only working for DataLbry's test instance. If you don't have access to it (via the api key) then your\ntests will fail. All integration tests should be written against the test instance."))}p.isMDXComponent=!0}}]);